1. Database creation
--- create database intranet;
2. company management table
--- create table companymanagement(id varchar(40) primary key,company_logo varchar(300) not null, company_name varchar(100) unique not null, company_email varchar(100) not null, company_address varchar(300) not null, company_website varchar(200) not null, company_contact_no varchar(50) not null, company_status varchar(20) not null, serial_no int not null unique auto_increment);
3. company pagesmanagement table
--- create table companypagesmanagement(no int auto_increment unique not null, id varchar(40) primary key, company_name varchar(200) not null, company_pagename varchar(100) not null, company_pagetype varchar(50) not null, company_pagestatus varchar(20) not null,companyId varchar(40) not null, foreign key(companyId) references companymanagement(id) on delete cascade, foreign key(company_name) references companymanagement(company_name) on update cascade);
4. office holiday table
--- create table officeholidays(no int unique auto_increment,department varchar(300) not null, holidaylist_title varchar(100) not null, holiday_title varchar(100) not null, holiday_date date not null,holiday_day varchar(15) not null, pageId varchar(40) not null, foreign key(pageId) references companypagesmanagement(id) on delete cascade);
5. user management table
--- create table usermanagement(profile_pic varchar(200) not null, first_name varchar(100) not null, last_name varchar(100) not null, date_of_birth date not null, country varchar(100) not null,  gender varchar(20) not null, blood_group varchar(10) not null, company_name varchar(200) not null, about_yourself varchar(300) not null, employee_id int primary key, date_of_joining date not null, user_type varchar(20) not null, department varchar(100) not null, shift int not null, status varchar(50) not null, email varchar(200) unique not null, password varchar(100) not null,past_exp_domain varchar(100) not null, past_exp_years float not null, designation varchar(250) not null, foreign key(company_name) references companymanagement(company_name) on update cascade);
6. office charts table
--- create table officecharts(id int primary key auto_increment, chart_image varchar(200) not null, pageId varchar(40) not null,foreign key(pageId) references companypagesmanagement(id) on delete cascade);
7. announcement table
--- create table announcement (id INT AUTO_INCREMENT PRIMARY KEY,  company_name varchar(100) NOT NULL, department varchar(200) not null, title VARCHAR(100) NOT NULL,  description VARCHAR(300) NOT NULL, from_date date NOT NULL,to_date date not null, notify varchar(5) not null, companyId varchar(40) not null,foreign key(companyId) references companymanagement(id) on delete cascade, foreign key(company_name) references companymanagement(company_name) on update cascade);
8. attendance table
--- create table attendance(id int auto_increment primary key, emp_id int not null, pdate varchar(10) not null, firstin float not null, lastout float not null, status varchar(5) not null,totalhrs float not null, updated_status varchar(5) default 'AA' not null, foreign key(emp_id) references usermanagement(employee_id));
9. reportingstructure table
--- create table reportingstructure(reporting_head int not null, users int not null,foreign key(reporting_head) references usermanagement(employee_id),foreign key(users) references usermanagement(employee_id));
10. contactinformation table
--- create table contactinformation(address varchar(300) not null, zip_code int not null, home_phone varchar(20) not null, home_phone_ext varchar(10) not null, office_phone varchar(20) not null, office_phone_ext varchar(10) not null, mobile1 varchar(20) not null, mobile2 varchar(20) not null, mobile3 varchar(20) not null, mobile4 varchar(20) not null, mobile5 varchar(20) not null,msn varchar(100) not null, aol varchar(100) not null, skype varchar(100) not null, yahoo varchar(100) not null, gtalk varchar(100) not null, emp_id int not null, foreign key(emp_id) references usermanagement(employee_id)on delete cascade);
11. familyinformation table
--- create table familyinformation(spouse_name varchar(50) not null,no_of_kids int not null,kids_names varchar(300) not null, anniversary_date date , blood_group varchar(20) not null,emp_id int not null, foreign key(emp_id) references usermanagement(employee_id)on delete cascade);
12. timezoneinformation table
--- create table timezoneinformation(timezone varchar(100) not null, emp_id int not null,foreign key(emp_id) references usermanagement(employee_id)on delete cascade);
13. funinformation table
--- create table funinformation(favorite_movie varchar(100) not null, favorite_place varchar(100) not null, favorite_sport varchar(100) not null, favorite_food varchar(100) not null, favorite_actor  varchar(100) not null, favorite_actress varchar(100) not null, quote varchar(300) not null, good_quality varchar(500) not null, bad_quality varchar(300) not null, emp_id int not null, foreign key(emp_id) references usermanagement(employee_id)on delete cascade);
14. applyleaves table
--- create table applyleaves(no int unique auto_increment,id varchar(40) not null primary key,mail_approved_by varchar(100) not null, cc_mail varchar(300) not null, leave_type varchar(30) not null, leave_option varchar(30) not null, from_date varchar(10) not null, to_date varchar(10) not null, selected_dates varchar(300) not null, half_day varchar(10) not null, total_leaves float not null, reason varchar(300) not null, status varchar(30) not null,emp_id int not null, applicant_name varchar(150) not null, applicant_email varchar(200) not null, foreign key(emp_id) references usermanagement(employee_id)); 
15. manage balance leaves
--- create table balanceleaves(id int primary key auto_increment,emp_id int not null, credit float default 0 not null, debit float default 0 not null, date date not null, total_leaves float not null, reference varchar(200) not null, foreign key(emp_id) references usermanagement(employee_id));
16. intro
--- CREATE TABLE intro(id INT AUTO_INCREMENT PRIMARY KEY, emp_id int not null);
17. office gallary
--- create table officegallery(no int unique not null auto_increment,id varchar(40) primary key, event_title varchar(300) not null, event_date date not null, gallery_path varchar(300) not null); 
18. office gallary images
--- create table officegalleryimages(no int primary key not null auto_increment, image varchar(300) not null, gallery_id varchar(40) not null, foreign key(gallery_id) references officegallery(id) on delete cascade);
19. salarymanagenet table
--- create table salarymanagement(uploaded_year int not null, uploaded_month varchar(50) not null,empid int not null, MONTH varchar(50) not null, `EMPLOYEE NAME` varchar(100) not null, empsalorgbasic float not null, empsalorghra float not null, empsalorgconv float not null, empsalorgedu float not null, empsalorgshift float not null, empsaltravel float not null, empsalmedical float not null, empsalorgsundrycreditothers float not null, emporggross float not null, empsalorgepf float not null, empsalorgesi float not null, empsalorgpt float not null, A0 float not null, B0 float not null, empsalbasic float not null, empsalhra float not null, empsalconv float not null, empsaledu float not null, empsalshift float not null, `T/H` float not null, empsalmed float not null, empsallta float not null,empsalsundrycreditothers float not null, empsallaptop float not null, empsalinternet float not null, empsalclientincentive float not null, empsalincentive float not null, empsalbonus float not null, empsalawards float not null, empsalothers float not null, empsalgross float not null, empsalepf float not null, empsalesi float not null, empsalpt float not null, empsalitax float not null, empsalsodexo float not null, empsaldebitother float not null, empsaldeductions float not null, empsalnet float not null);
20. useraccessmanagement table
--- create table useraccessmanagement(emp_id int not null, restricted_pages varchar(1000) not null, foreign key(emp_id) references usermanagement(employee_id));
21. userexperince table
--- create table userexperience(promotion_id varchar(40) not null, emp_id int not null, promotion_title varchar(300) not null, promotion_date date not null, roles_and_responsibility varchar(500) not null, foreign key(emp_id) references usermanagement(employee_id));
22. userotp table
--- create table userotp(id varchar(40) primary key not null, email varchar(200) not null, otp int not null);
23. employeedetails table
--- create table employeedetails(passport_photo text not null, designation text not null, emp_id int not null, date_of_joining date not null, user_type varchar(20) not null, department varchar(50) not null, company_name text not null, first_name text not null, middle_name text not null, last_name text not null, gender varchar(20) not null, date_of_birth date not null, age int not null, marital_status varchar(20) not null, blood_group varchar(10) not null, nationality text not null, spouse_name text not null, number_of_childrens int not null, office_email text not null, personal_email text not null, mobile_number varchar(20) not null, permanent_address text not null, zip_code varchar(6) not null, city text not null, state text not null, country text not null, account_number varchar(20) not null, bank_name text not null, bank_branch text not null, ifsc_code varchar(20) not null, aaddhar_number varchar(12) not null, pan_number varchar(10) not null, uan varchar(50) not null, esi varchar(50) not null, secondary_education_percentage float not null, secondary_education_percentage_file text not null, higher_secondary_education_percentage  float not null, higher_secondary_education_percentage_file text not null, diploma_stream text not null, diploma_percentage float not null, diploma_file text not null, graduation_stream text not null, graduation_percentage float not null, graduation_file text not null, post_graduation_stream text not null, post_graduation_percentage float not null, post_graduation_file text not null, past_exp_years float not null, past_exp_domain varchar(100) not null, past_exp_designation text not null, resignation_letter_file text not null, appraisal_letter_file text not null, past_exp_offer_letter_file text not null, payslips_file text not null, resume_file text not null, offer_letter_file text not null, nda_file text not null);
